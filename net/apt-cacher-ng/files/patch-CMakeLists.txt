--- CMakeLists.txt.orig	2015-09-21 20:05:55 UTC
+++ CMakeLists.txt
@@ -73,7 +73,7 @@ TEST_BIG_ENDIAN(WORDS_BIGENDIAN)
 # also influence it, need to be adjusted carefully by user.
 SET(ACNG_CXXFLAGS_COMMON " -pthread -Wall -Wextra -Wno-unused-parameter -D_FILE_OFFSET_BITS=64 ")
 
-foreach(linkarg -Wl,--as-needed -Wl,-O1 -Wl,--discard-all -Wl,--no-undefined -Wl,--build-id=sha1)
+foreach(linkarg -Wl,--as-needed -Wl,-O1 -Wl,--discard-all -Wl,--no-undefined)
 	STRING(REGEX REPLACE "=|-|," "" optname "${linkarg}")
 	CHECK_CXX_COMPILER_FLAG("${linkarg}" "LD_${optname}")
 	if(LD_${optname})
@@ -208,7 +208,7 @@ if(NOT HAVE_MEMORY_SPTR)
    message(FATAL_ERROR "Could not find a working smart pointer implementation.")
 endif()
 
-SET(CMAKE_REQUIRED_LIBRARIES dl)
+#SET(CMAKE_REQUIRED_LIBRARIES dl)
 FILE(READ test/build/HAVE_DLOPEN.cc TESTSRC)
 CHECK_CXX_SOURCE_COMPILES("${TESTSRC}" HAVE_DLOPEN)
 
@@ -249,9 +249,9 @@ ENDIF(HAVE_LZMA)
 SET(CMAKE_REQUIRED_LIBRARIES "")
 
 if(USE_SSL)
-	pkg_check_modules(openssl openssl)
-	set(HAVE_SSL openssl_FOUND)
-	if(openssl_FOUND)
+	find_package(OpenSSL)
+	set(HAVE_SSL OPENSSL_FOUND)
+	if(OPENSSL_FOUND)
 		string(REPLACE ";" " " ACNG_CXXFLAGS_COMMON "${ACNG_CXXFLAGS_COMMON} ${openssl_CFLAGS}")
 		string(REPLACE ";" " " SSL_LIB_LIST "${openssl_LDFLAGS}")
 	else()
